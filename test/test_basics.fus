
"The result is:"

    1 2 + dup 3 == assert
    3 4 + dup 7 == assert
* dup 21 == assert
neg dup -21 == assert

1 1 == assert
1 2 == not assert
1 `x eq not assert
`x `x eq assert
null null eq assert

1 1 int_eq assert
1 2 int_eq not assert

`x `x sym_eq assert
`x `y sym_eq not assert

T T bool_eq assert
T F bool_eq not assert
F T bool_eq not assert
F F bool_eq assert

-999 drop

T F

1 is_int assert
`x is_int not assert
`x is_sym assert
null is_null assert
T is_bool assert
arr is_arr assert
obj is_obj assert
fun() is_fun assert

1 typeof `int sym_eq assert
`x typeof `sym sym_eq assert
null typeof `null sym_eq assert
T typeof `bool sym_eq assert
arr typeof `arr sym_eq assert
obj typeof `obj sym_eq assert
fun() typeof `fun sym_eq assert

"LALALALA" p
1 2 + p
T F p p

def f: "EFFFF!\n" str_p

def g: 2

def add of(x y -> z): +

def mkpoint:
    ='y ='x
    obj 'x =.x 'y =.y


"INT OPS:\n" str_p
1 2 +   3 == assert
1 2 -  -1 == assert
1 2 *   2 == assert
#10 2 /  5 == assert
1 2 ==  not assert
1 2 !=  assert
1 2 <   assert
1 2 >   not assert
1 2 <=  assert
1 2 >=  not assert
"INT OPS OK!\n" str_p
