
set -e

if [ -z "$1" ]
then
    echo "Usage (pick one):"
    echo "    $(basename "$0") MAIN [GCC_ARGS...]"
    echo "    $(basename "$0") uwsgi [GCC_ARGS...]"
    echo "Where:"
    echo "    MAIN is one of:"
    for F in src/main/*.c
    do
        F=$(basename "$F")
        echo "        ${F%%.c}"
    done
    exit 1
fi

MAIN="$1"
shift

GCC="gcc"
MAIN_C="src/main/$MAIN.c"
CFLAGS="-g -std=c99 -Wall -Werror -Wno-unused"
CFLAGS2="-rdynamic" # for backtrace_symbols
CDEFS="-DFUS_ENABLE_BACKTRACE -DFUS_ENABLE_BOXED_LLIST"
CFILES="src/*.c"
OUTFILE="main"

if [ "$MAIN" = "js" ]
then
    echo "#####################################################"
    echo "# Compiling fus with Emscripten... See js/README.md #"
    echo "#####################################################"
    echo

    if [ "$1" = "test" ]
    then
        shift
        MAIN_C="src/main/test.c"
    fi

    GCC="emcc"
    CFLAGS="-s EXTRA_EXPORTED_RUNTIME_METHODS=['ccall','cwrap']"
    CFLAGS2=""
    CDEFS="-DFUS_ENABLE_BOXED_LLIST"
    OUTFILE="js/fus.html"
elif [ "$MAIN" = "lib" ]
then
    CFLAGS+=" -fPIC --shared"
    OUTFILE="libfus.so"
    >&2 echo "Compiling $OUTFILE..."
    >&2 echo "To install, try: sudo ./compile lib_install"
elif [ "$MAIN" = "py" ]
then
    CFLAGS+=" -fPIC --shared $(python3-config --includes)"
    OUTFILE="py/fus.so"
    >&2 echo "Compiling $OUTFILE..."
    >&2 echo "For testing the resulting Python module, consider adding ./py to PYTHONPATH:"
    >&2 echo "    export PYTHONPATH=$PWD/py:\$PYTHONPATH"
elif [ "$MAIN" = "lib_install" ]
then
    OUTFILE="libfus.so"
    LIBDIR="/usr/lib/"
    INCDIR="/usr/include/fus/"
    SRCFILES="src/*.h"

    >&2 echo "Installing libfus..."

    >&2 echo "Copying $OUTFILE to $LIBDIR ..."
    cp "$OUTFILE" "$LIBDIR"

    >&2 echo "Copying $SRCFILES to $LIBDIR ..."
    mkdir -p "$INCDIR"
    cp $SRCFILES "$INCDIR"

    >&2 echo "Installation complete!"
    exit 0
elif [ "$MAIN" = "libtest" ]
then
    CFLAGS+=" -lfus"
    CFILES=""
elif [ "$MAIN" = "uwsgi" ]
then
    echo "#########################################################"
    echo "# Compiling fus plugin for UWSGI... See uwsgi/README.md #"
    echo "#########################################################"
    echo

    CFLAGS="-fPIC --shared `uwsgi --cflags` -Werror -Wno-unused -Wno-sign-compare -Wno-type-limits"
    OUTFILE="fus_plugin.so"
fi

"$GCC" $CFLAGS $CFLAGS2 $CDEFS \
    -o "$OUTFILE" \
    $CFILES \
    "$MAIN_C" \
    $@
