
# "FUS IN FUS"
#
# This file is valid fus, but uses a simplified subset of the full
# language, making it easy to parse using C, and thereby bootstrap
# up to the full language.

def test of(->):
    @parser_test


##########
# PARSER #
##########

def parser_new: obj
    arr =.files


def parser_test of(->):
    @parser_new ='parser

    ''parser
        ..files "test.fus" data:
            def f: 1
            def g: 2
            def add: +
            @f @g @add 3 == assert
        @file_new, =.files
    ='parser



########
# FILE #
########

def file_new of(filename data -> file): obj
    swap =.data
    swap =.filename
    arr "<root>" @def_new, =.defs

def file_add_def of(file def -> file def_i):
    ='def
    ..defs ''def, dup len ='def_i =.defs
    ''def_i

def file_find_def of(file path -> def_i):
    ='path .defs ='defs
    0 ='def_i
    'path arr_for_rev: ='part
        'defs 'def_i .$ ='def
        'def .refs ='refs
        'refs 'part has not if: null return
        'refs 'part get ='def_i
    ''def_i

def file_get_def of(file path -> def):
    ='path ='file
    'file 'path @file_find_def ='def_i
    'def_i is_null if: null return
    'file .defs 'def_i .$


#######
# DEF #
#######

def def_new of(title -> def): obj
    swap =.title
    obj =.refs

