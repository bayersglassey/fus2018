

defsig iter: x -> gen



sig iter def iter:
    obj
        &iter_int =.int
        &iter_arr =.arr
        fun(keys &iter_arr) =.obj
        fun() =.gen
    over typeof get call iter

sig iter def iter_int:
    gen takes(n):
        0 ='i
        do:
            'i 'n < while
            'i out loop

sig iter def iter_arr:
    gen takes(a):
        ='a
        0 ='i
        do:
            'i 'a len < while
            'a 'i .$ out loop

sig(->) def test:
    3 @iter
        >> 0 == assert
        >> 1 == assert
        >> 2 == assert
    done assert

    (arr 1, 2, 3,) @iter
        >> 1 == assert
        >> 2 == assert
        >> 3 == assert
    done assert

    (obj 1 =.x 2 =.y) @iter
        >> `x sym_eq assert
        >> `y sym_eq assert
    done assert

    gen(10 out 20 out) @iter
        >> 10 == assert
        >> 20 == assert
    done assert

