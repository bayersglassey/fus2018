

Sep 2, 2018:
------------

Need better debugging of compiler, similar to how state has nicer error messages now
(But even state's debug info is lacking -- should tell you row & col of an error!..)

Keep track of stack size & check it against signature...


Our current approach to name resolution, where we try to do everything as soon as
possible and convert things to refs as needed, is overcomplicated.
Much easier to first generate the complete tree of frames, *then* resolve all
references.
We still need TYPE_REF, for "use" -- maybe *only* for "use"?..


Sep 3, 2018:
------------

Review compiler frame->row, frame->col stuff...
I had the following happen:

  Executing opcode < at byte 23/224
    In DEF 8 (apply_sounds) at row=8, col=0
    In MOD 1 (music) at row=2, col=3 [file:fus/music.fus]

...when apply_sounds should have been row=44, col=1.
For that matter, should col=0 even be possible??


Sep 8, 2018:
------------

Need "load data(...)".
The latter is like "data(...)" but loaded from a file (like "load(...)").


Oct 15, 2018:
-------------

fus_int_decode, fus_sym_decode, fus_bool_decode:
    If the type is wrong, how do we report it?
    We're not returning a fus value, so we can't return fus_err(...).
    Do we pass a pointer to the value to be decoded, and turn it into
    a fus_err if it's the wrong type????
    Or do we add fus_vm_err() which is called by fus_err()?
    ...it's not really "safe" since the error has escaped the VM
    as a "decoded" thing, but at least VM can choose to bring the house
    down with an abort, or whatever... hmmmmm.
    Current approach where we get nice debug output is maybe superior option.

Oct 23, 2018:
-------------

HAVE A LOOK AT THIS LEXER PROBLEM:
    ./compile_newvalues parse && ./main fus/lexer_problem.fus
...ADD A TEST FOR IT.


Nov 1, 2018:
------------

"compile_newvalues lib" is a hack...
Proper thing to do is copy includes.h to /usr/include/fus and libfus.so to /usr/lib.
Then geom2018 can do #include <fus/includes.h> and -lfus!
Gotta be a superuser eh!
Shall we make a tiny RPM for it???
How about "make install"? ("compile_newvalues lib install"... uhh)

