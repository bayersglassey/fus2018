
# modules

    module def sig import @ &

# stack

    dup drop swap nip over

# vars

    'x ''x ='x

# control

    if ifelse do next break while

# debug

    p stack vars assert error ignore

# types

    typeof is

# null

    null

# bool

    y n not and or bool_eq

# int

    0 + - / * neg mod < > <= >= == != int_tostr

# str

    "abc"
    str_eq str_indexof str_len str_get str_set str_split str_join
    str_toarr

# sym

    `x typeof sym_eq
    sym_tostr

# obj

    obj .x ..x =.x ?.x keys get rip set has

# arr

    arr len , push pop lpush lpop split join repeat .$ ..$ =.$ ?.$
    quote(...)

# fun

    fun(...)(...) call(...)

