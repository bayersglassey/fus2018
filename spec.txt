
# frames

    module def sig use @ &

# general

    data(...) typeof is

# stack

    dup drop swap nip over

# vars

    'x ''x ='x

# control

    if ifelse do next break while

# debug

    p stack vars assert error ignore

# null

    null

# bool

    t f not and or bool_eq

# int

    0 + - * / mod neg < > <= >= == != int_tostr

# str

    "abc"
    str_eq str_len str_split str_join str_indexof str_get str_set
    str_toarr str_p

# sym

    `x sym_eq sym_tostr

# obj

    obj .x ..x =.x ?.x get rip set has keys

# arr

    arr len , push pop lpush lpop split join repeat .$ ..$ =.$ ?.$

# fun

    fun(...)(...) call(...)

